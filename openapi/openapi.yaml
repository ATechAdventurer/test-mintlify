openapi: 3.0.0
info:
  title: Abbey API
  description: >
    The public Abbey API. Used for integrating with Abbey and building
    interfaces to extend the Abbey platform.

    See https://docs.abbey.io for more information.
  version: v1
  contact:
    name: Abbey Support
    email: help@abbey.io
    url: https://abbey.io
  termsOfService: https://abbey.io/terms
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - description: prod
    url: https://api.abbey.io/v1
    x-speakeasy-server-id: prod
  - description: dev
    url: http://localhost:8080/v1
    x-speakeasy-server-id: dev
security:
  - BearerAuth: []
tags:
  - name: Grant Kits
    description: >
      Grant Kits are what you configure in code to control and automatically
      right-size permissions for resources.

      A Grant Kit has 3 components:


      1. Workflow to configure how someone should get access.

      2. Policies to configure if someone should get access.

      3. Output to configure how and where Grants should materialize.
    externalDocs:
      url: https://docs.abbey.io/getting-started/concepts#grant-kits
  - name: Identities
    description: |
      User metadata used for enriching data.
      Enriched data is used to write richer policies, workflows, and outputs.
    externalDocs:
      url: https://docs.abbey.io
  - name: Requests
    description: |
      Requests are Access Requests that users make to get access to a resource.
    externalDocs:
      url: https://docs.abbey.io/getting-started/concepts#access-requests
  - name: Reviews
    description: |
      Reviews are decisions made by a reviewer on an Access Request.

      A Reviewer might approve or deny a request.
    externalDocs:
      url: https://docs.abbey.io/product/approving-or-denying-access-requests
  - name: Grants
    description: >
      Grants are permissions that reflect the result of an access request going
      through the process of evaluating 

      policies and approval workflows where all approval conditions are met.


      Grants may be revoked manually by a user or automatically if a time-based
      or attribute-based policy is

      included in the corresponding Grant Kit's policy.
    externalDocs:
      url: https://docs.abbey.io/getting-started/concepts#grants
paths:
  /grant-kits:
    get:
      operationId: ListGrantKits
      summary: QA Session with Adi
      description: >
        Returns a list of the latest versions of each grant kit in the
        organization.


        Grant Kits are sorted by creation date, descending.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantKits"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grant Kits
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            var response = await client.GrantKits.ListGrantKitsAsync();

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.grant_kits.list_grant_kits()

            print(result)
    post:
      operationId: CreateGrantKit
      summary: Create a Grant Kit
      description: Creates a new Grant Kit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrantKitCreateParams"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantKit"
          description: Created
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grant Kits
      x-speakeasy-entity-operation: GrantKit#create
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;
            using TestCelitecYaml.Models;

            var client = new TestCelitecYamlClient();

            var output = new Output("location");
            var input = new GrantKitCreateParams("name", "description", output);

            var response = await client.GrantKits.CreateGrantKitAsync(input);

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import GrantKitCreateParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = GrantKitCreateParams(
                name="name",
                description="description",
                workflow={
                    "steps": [
                        {
                            "reviewers": {
                                "one_of": [
                                    "one_of"
                                ],
                                "all_of": [
                                    "all_of"
                                ]
                            },
                            "skip_if": [
                                {
                                    "bundle": "bundle",
                                    "query": "query"
                                }
                            ]
                        }
                    ]
                },
                policies=[
                    {
                        "bundle": "bundle",
                        "query": "query"
                    }
                ],
                output={
                    "location": "location",
                    "append": "append",
                    "overwrite": "overwrite"
                }
            )

            result = sdk.grant_kits.create_grant_kit(request_body=request_body)

            print(result)
  /grant-kits/{grant_kit_id_or_name}:
    delete:
      operationId: deleteGrantKit
      summary: Delete a Grant Kit
      description: Deletes the specified grant kit.
      parameters:
        - description: The ID of the grant kit or resource to delete
          explode: false
          in: path
          name: grant_kit_id_or_name
          required: true
          schema:
            type: string
          style: simple
          x-speakeasy-match: id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantKit"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grant Kits
      x-speakeasy-entity-operation: GrantKit#delete
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.GrantKits.DeleteGrantKitAsync("grant_kit_id_or_name");


            Console.WriteLine(response);
        - lang: python
          source: >-
            from test_sdk import TestSdk, Environment


            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )


            result =
            sdk.grant_kits.delete_grant_kit(grant_kit_id_or_name="grant_kit_id_or_name")


            print(result)
    get:
      operationId: getGrantKitByID
      summary: Retrieve a Grant Kit by ID
      description: Returns the details of a Grant Kit.
      parameters:
        - description: The ID of the grant kit or resource to retrieve.
          explode: false
          in: path
          name: grant_kit_id_or_name
          required: true
          schema:
            type: string
          style: simple
          x-speakeasy-match: id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantKit"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grant Kits
      x-speakeasy-entity-operation: GrantKit#get
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.GrantKits.GetGrantKitByIdAsync("grant_kit_id_or_name");


            Console.WriteLine(response);
        - lang: python
          source: >-
            from test_sdk import TestSdk, Environment


            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )


            result =
            sdk.grant_kits.get_grant_kit_by_id(grant_kit_id_or_name="grant_kit_id_or_name")


            print(result)
    put:
      operationId: updateGrantKit
      summary: Update a Grant Kit
      description: |
        Updates the specified grant kit.
      parameters:
        - description: The ID of the grant kit or resource to update
          explode: false
          in: path
          name: grant_kit_id_or_name
          required: true
          schema:
            type: string
          style: simple
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrantKitUpdateParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantKit"
          description: Success
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grant Kits
      x-speakeasy-entity-operation: GrantKit#update
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var output = new Output("location");

            var input = new GrantKitUpdateParams("name", "description", output);


            var response = await client.GrantKits.UpdateGrantKitAsync(input,
            "grant_kit_id_or_name");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import GrantKitUpdateParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = GrantKitUpdateParams(
                name="name",
                description="description",
                workflow={
                    "steps": [
                        {
                            "reviewers": {
                                "one_of": [
                                    "one_of"
                                ],
                                "all_of": [
                                    "all_of"
                                ]
                            },
                            "skip_if": [
                                {
                                    "bundle": "bundle",
                                    "query": "query"
                                }
                            ]
                        }
                    ]
                },
                output={
                    "location": "location",
                    "append": "append",
                    "overwrite": "overwrite"
                },
                policies=[
                    {
                        "bundle": "bundle",
                        "query": "query"
                    }
                ]
            )

            result = sdk.grant_kits.update_grant_kit(
                request_body=request_body,
                grant_kit_id_or_name="grant_kit_id_or_name"
            )

            print(result)
  /grant-kits/{grant_kit_id_or_name}/versions:
    get:
      operationId: listGrantKitVersionsByID
      summary: List Grant Kit Versions of a Grant Kit ID
      description: |
        Returns all versions of a grant kit.

        Grant Kits are sorted by creation date, descending.
      parameters:
        - description: The ID of the grant kit or resource to retrieve.
          explode: false
          in: path
          name: grant_kit_id_or_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantKitVersions"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grant Kits
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.GrantKits.ListGrantKitVersionsByIdAsync("grant_kit_id_or_name");


            Console.WriteLine(response);
        - lang: python
          source: >-
            from test_sdk import TestSdk, Environment


            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )


            result =
            sdk.grant_kits.list_grant_kit_versions_by_id(grant_kit_id_or_name="grant_kit_id_or_name")


            print(result)
  /identities:
    post:
      operationId: createIdentity
      summary: Create an Identity
      description: |
        Creates a new identity.

        An identity represents a human, service, or workload.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentityParams"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
          description: Created
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Identities
      x-speakeasy-entity-operation: Identity#create
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new IdentityParams("abbey_account", "source",
            "metadata");


            var response = await client.Identities.CreateIdentityAsync(input);


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import IdentityParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = IdentityParams(
                abbey_account="abbey_account",
                source="source",
                metadata="metadata"
            )

            result = sdk.identities.create_identity(request_body=request_body)

            print(result)
    get:
      operationId: listEnrichedIdentities
      summary: List all Identities with enriched metadata
      description: Returns all Identities with enriched metadata in the org
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identities"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Identities
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.Identities.ListEnrichedIdentitiesAsync();


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.identities.list_enriched_identities()

            print(result)
  /identities/{identity_id}:
    delete:
      operationId: deleteIdentity
      summary: Delete an Identity
      description: Deletes the specified identity.
      parameters:
        - description: The ID of the identity to delete
          explode: false
          in: path
          name: identity_id
          required: true
          schema:
            type: string
          style: simple
          x-speakeasy-match: id
      responses:
        "200":
          description: Success
        "204":
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Identities
      x-speakeasy-entity-operation: Identity#delete
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            await client.Identities.DeleteIdentityAsync("identity_id");
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.identities.delete_identity(identity_id="identity_id")

            print(result)
    get:
      operationId: getIdentity
      summary: Retrieve an Identity
      description: Returns the details of an identity.
      parameters:
        - description: The ID of the identity to retrieve
          explode: false
          in: path
          name: identity_id
          required: true
          schema:
            type: string
          style: simple
          x-speakeasy-match: id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Identities
      x-speakeasy-entity-operation: Identity#get
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.Identities.GetIdentityAsync("identity_id");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.identities.get_identity(identity_id="identity_id")

            print(result)
    put:
      operationId: updateIdentity
      summary: Update an Identity
      description: Updates an identity.
      parameters:
        - description: The ID of the identity to retrieve
          explode: false
          in: path
          name: identity_id
          required: true
          schema:
            type: string
          style: simple
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentityParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Identities
      x-speakeasy-entity-operation: Identity#update
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new IdentityParams("abbey_account", "source",
            "metadata");


            var response = await client.Identities.UpdateIdentityAsync(input,
            "identity_id");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import IdentityParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = IdentityParams(
                abbey_account="abbey_account",
                source="source",
                metadata="metadata"
            )

            result = sdk.identities.update_identity(
                request_body=request_body,
                identity_id="identity_id"
            )

            print(result)
  /requests:
    get:
      operationId: listRequests
      summary: List Requests
      description: |
        Returns a list of requests.

        Requests are sorted by creation date, descending.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Requests"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Requests
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            var response = await client.Requests.ListRequestsAsync();

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.requests.list_requests()

            print(result)
    post:
      operationId: createRequest
      summary: Create a Request
      description: >
        Creates a new request.


        You will need to pass in a Grant Kit ID as the target of this request.
        This will create a request

        against the latest version of the Grant Kit.


        Grant Kit Versions are immutable and you won't be able to create a
        request against an older Grant Kit Version.

        If you want to do this, you will have to roll forward by creating a new
        Grant Kit Version.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestParams"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
          description: Created
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Requests
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;
            using TestCelitecYaml.Models;

            var client = new TestCelitecYamlClient();

            var input = new RequestParams("grant_kit_id", "reason");

            var response = await client.Requests.CreateRequestAsync(input);

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import RequestParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = RequestParams(
                grant_kit_id="grant_kit_id",
                reason="reason",
                user_input={
                    "expire_in": "+28ns",
                    "expire_at": "expire_at"
                }
            )

            result = sdk.requests.create_request(request_body=request_body)

            print(result)
  /requests/{request_id}:
    get:
      operationId: getRequestByID
      summary: Retrieve a Request by ID
      description: Returns the details of a request.
      parameters:
        - description: The ID of the request to retrieve
          explode: false
          in: path
          name: request_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Requests
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.Requests.GetRequestByIdAsync("request_id");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.requests.get_request_by_id(request_id="request_id")

            print(result)
  /requests/{request_id}/cancel:
    put:
      operationId: cancelRequestByID
      summary: Cancel a Request by ID
      description: |
        Cancels the specified request.
      parameters:
        - description: The ID of the request to cancel
          explode: false
          in: path
          name: request_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCancelParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
          description: Success
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Requests
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new RequestCancelParams();


            var response = await client.Requests.CancelRequestByIdAsync(input,
            "request_id");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import RequestCancelParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = RequestCancelParams(
                reason="reason"
            )

            result = sdk.requests.cancel_request_by_id(
                request_body=request_body,
                request_id="request_id"
            )

            print(result)
  /reviews:
    get:
      operationId: ListReviews
      summary: List Reviews
      description: |
        Returns a list of all the reviews sent to the user.

        Reviews are sorted by creation date, descending.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reviews"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Reviews
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            var response = await client.Reviews.ListReviewsAsync();

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.reviews.list_reviews()

            print(result)
  /reviews/{review_id}:
    get:
      operationId: getReviewByID
      summary: Retrieve a Review by ID
      description: Returns the details of a review
      parameters:
        - description: The ID of the review to retrieve.
          explode: false
          in: path
          name: review_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Reviews
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            var response = await client.Reviews.GetReviewByIdAsync("review_id");

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.reviews.get_review_by_id(review_id="review_id")

            print(result)
  /reviews/{review_id}/approve:
    put:
      operationId: approveReview
      summary: Approve a Review
      description: |
        Updates the specified review with an approval decision.
      parameters:
        - description: The ID of the review to approve
          explode: false
          in: path
          name: review_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewUpdateParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
          description: Success
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Reviews
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new ReviewUpdateParams("reason");


            var response = await client.Reviews.ApproveReviewAsync(input,
            "review_id");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import ReviewUpdateParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = ReviewUpdateParams(
                reason="reason"
            )

            result = sdk.reviews.approve_review(
                request_body=request_body,
                review_id="review_id"
            )

            print(result)
  /reviews/{review_id}/deny:
    put:
      operationId: denyReview
      summary: Deny a Review
      description: |
        Updates the specified review with a deny decision.
      parameters:
        - description: The ID of the review to deny
          explode: false
          in: path
          name: review_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewUpdateParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
          description: Success
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Reviews
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new ReviewUpdateParams("reason");


            var response = await client.Reviews.DenyReviewAsync(input,
            "review_id");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import ReviewUpdateParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = ReviewUpdateParams(
                reason="reason"
            )

            result = sdk.reviews.deny_review(
                request_body=request_body,
                review_id="review_id"
            )

            print(result)
  /grants:
    get:
      operationId: ListGrants
      summary: List Grants
      description: >
        Returns a list of all the grants belonging to a user.


        Grants are sorted by creation date, descending. Creation date
        effectively means when the grant was approved.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Grants"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grants
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            var response = await client.Grants.ListGrantsAsync();

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.grants.list_grants()

            print(result)
  /grants/{grant_id}:
    delete:
      operationId: revokeGrant
      summary: Revoke a Grant by ID
      description: |
        Revokes the specified grant.
      parameters:
        - description: The ID of the grant to revoke
          explode: false
          in: path
          name: grant_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Grant"
          description: Success
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grants
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            var response = await client.Grants.RevokeGrantAsync("grant_id");

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.grants.revoke_grant(grant_id="grant_id")

            print(result)
    get:
      operationId: getGrantByID
      summary: Retrieve a Grant by ID
      description: |
        Returns the details of a grant.
      parameters:
        - description: The ID of the grant to retrieve
          explode: false
          in: path
          name: grant_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Grant"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "409":
          $ref: "#/components/responses/RequestConflict"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Grants
      x-codeSamples:
        - lang: csharp
          source: |-
            using TestCelitecYaml;

            var client = new TestCelitecYamlClient();

            var response = await client.Grants.GetGrantByIdAsync("grant_id");

            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.grants.get_grant_by_id(grant_id="grant_id")

            print(result)
  /samlConnection:
    get:
      operationId: listSamlConnections
      summary: List SAML Connections
      description: |
        Returns a list of SAML connections.
        The connections are scoped by the current user and returned from Clerk
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SamlConnections"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - SAML Connections
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.SamlConnections.ListSamlConnectionsAsync();


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            result = sdk.saml_connections.list_saml_connections()

            print(result)
    post:
      operationId: createSamlConnection
      summary: Create a new SAML connection
      description: Creates a new SAML connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SamlConnectionParams"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SamlConnection"
          description: Created
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "409":
          $ref: "#/components/responses/RequestConflict"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - SAML Connections
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new SamlConnectionParams("name", "domain");


            var response = await
            client.SamlConnections.CreateSamlConnectionAsync(input);


            Console.WriteLine(response);
        - lang: python
          source: >-
            from test_sdk import TestSdk, Environment

            from test_sdk.models import SamlConnectionParams


            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )


            request_body = SamlConnectionParams(
                name="name",
                domain="domain",
                idp_entity_id="idp_entity_id",
                idp_sso_url="idp_sso_url",
                idp_certificate="idp_certificate"
            )


            result =
            sdk.saml_connections.create_saml_connection(request_body=request_body)


            print(result)
  /samlConnection/{saml_connection_id}:
    get:
      operationId: getSamlConnectionByID
      summary: Fetches a SAML connection by its ID
      description: Checks whether a user has a SAML connection and then hydrates the
        connection from Clerk
      parameters:
        - description: The ID of the SAML connection to retrieve
          explode: false
          in: path
          name: saml_connection_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SamlConnection"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - SAML Connections
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await
            client.SamlConnections.GetSamlConnectionByIdAsync("saml_connection_id");


            Console.WriteLine(response);
        - lang: python
          source: >-
            from test_sdk import TestSdk, Environment


            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )


            result =
            sdk.saml_connections.get_saml_connection_by_id(saml_connection_id="saml_connection_id")


            print(result)
    put:
      operationId: updateSamlConnectionByID
      summary: Updates a SAML connection by its ID
      description: Checks whether a user owns a SAML connection and then updates the
        SAML connection
      parameters:
        - description: The ID of the SAML connection to update
          explode: false
          in: path
          name: saml_connection_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SamlConnectionUpdateParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SamlConnection"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - SAML Connections
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new SamlConnectionUpdateParams();


            var response = await
            client.SamlConnections.UpdateSamlConnectionByIdAsync(input,
            "saml_connection_id");


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import SamlConnectionUpdateParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = SamlConnectionUpdateParams(
                name="name",
                domain="domain",
                idp_entity_id="idp_entity_id",
                idp_sso_url="idp_sso_url",
                idp_certificate="idp_certificate",
                active=True
            )

            result = sdk.saml_connections.update_saml_connection_by_id(
                request_body=request_body,
                saml_connection_id="saml_connection_id"
            )

            print(result)
    delete:
      operationId: deleteSamlConnectionByID
      summary: Deletes a SAML connection by its ID
      description: Deletes a SAML connection by its ID
      parameters:
        - description: The ID of the SAML connection to update
          explode: false
          in: path
          name: saml_connection_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - SAML Connections
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            await
            client.SamlConnections.DeleteSamlConnectionByIdAsync("saml_connection_id");
        - lang: python
          source: >-
            from test_sdk import TestSdk, Environment


            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )


            result =
            sdk.saml_connections.delete_saml_connection_by_id(saml_connection_id="saml_connection_id")


            print(result)
  /demo:
    post:
      operationId: CreateDemo
      summary: Create Demo Access
      description: Creates a new Demo access
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DemoParams"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Demo"
          description: Created
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Demo
      x-speakeasy-entity-operation: Demo#create
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new DemoParams(DemoParams.Permission.ReadWrite,
            "email");


            var response = await client.Demo.CreateDemoAsync(input);


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import DemoParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = DemoParams(
                permission="read_write",
                email="email"
            )

            result = sdk.demo.create_demo(request_body=request_body)

            print(result)
    delete:
      operationId: DeleteDemo
      summary: Delete Demo Access
      description: Deletes the Demo access
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DemoParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Demo"
          description: Success
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "404":
          $ref: "#/components/responses/ResourceNotFound"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - Demo
      x-speakeasy-entity-operation: Demo#delete
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;

            using TestCelitecYaml.Models;


            var client = new TestCelitecYamlClient();


            var input = new DemoParams(DemoParams.Permission.ReadWrite,
            "email");


            var response = await client.Demo.DeleteDemoAsync(input);


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import DemoParams

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = DemoParams(
                permission="read_write",
                email="email"
            )

            result = sdk.demo.delete_demo(request_body=request_body)

            print(result)
  /slackcommands:
    post:
      operationId: SlackCommand
      summary: Receive a slash command from Slack
      description: Receives slash commands initiated from the Abbey Slack App
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OauthListing"
          description: Success
        "201":
          description: Success
        "400":
          $ref: "#/components/responses/RequestFailed"
        "401":
          $ref: "#/components/responses/AuthenticationFailed"
        "429":
          $ref: "#/components/responses/RateLimited"
        default:
          $ref: "#/components/responses/ServerErrored"
      tags:
        - SlackCommand
      x-codeSamples:
        - lang: csharp
          source: >-
            using TestCelitecYaml;


            var client = new TestCelitecYamlClient();


            var response = await client.SlackCommand.SlackCommandAsync(new
            object {});


            Console.WriteLine(response);
        - lang: python
          source: |-
            from test_sdk import TestSdk, Environment
            from test_sdk.models import dict

            sdk = TestSdk(
                access_token="YOUR_ACCESS_TOKEN",
                base_url=Environment.DEFAULT.value,
                timeout=10000
            )

            request_body = {}

            result = sdk.slack_command.slack_command(request_body=request_body)

            print(result)
components:
  responses:
    RequestFailed:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Request Failed
    AuthenticationFailed:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Authentication Failed
    NotAuthorized:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Not Authorized
    ResourceNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Resource Not Found
    RequestConflict:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Request Conflict with another resource
    RateLimited:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Rate Limited
    ServerErrored:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Server Errored on Abbey's end
  schemas:
    JsonSchema:
      description: >
        A meta-schema conforming to the official JSON Schema core/validation
        dialect 2020-12 meta-schema.
    Oauth2Flow:
      properties:
        url:
          type: string
        pkce:
          $ref: "#/components/schemas/Oauth2FlowPkce"
        query_params:
          items:
            $ref: "#/components/schemas/KeyValuePair"
          type: array
        callback_query_params:
          items:
            type: string
          type: array
        exchange:
          $ref: "#/components/schemas/Oauth2FlowExchange"
      required:
        - url
      type: object
    Oauth2FlowExchange:
      description: |
        Describes how the client should conduct the authorization code exchange.
      properties:
        enabled:
          type: boolean
        request:
          $ref: "#/components/schemas/RequestSpec"
      required:
        - enabled
        - request
      type: object
    Oauth2FlowPkce:
      properties:
        enabled:
          type: boolean
        method:
          $ref: "#/components/schemas/PkceMethod"
      required:
        - enabled
        - method
      type: object
    PkceMethod:
      enum:
        - S256
      type: string
    RequestSpec:
      properties:
        url:
          type: string
        method:
          $ref: "#/components/schemas/HttpMethod"
        content_type:
          $ref: "#/components/schemas/RequestContentType"
        body:
          description: >
            A value conforming to the official JSON Schema core/validation
            dialect 2020-12 meta-schema.
      required:
        - method
        - url
      type: object
    RequestContentType:
      enum:
        - application/json
        - application/x-www-form-urlencoded
      type: string
    OAuthCreateParams:
      example:
        name: Slack
        code: "111111111"
        application: slack
      properties:
        name:
          type: string
        code:
          type: string
        application:
          type: string
    OauthListing:
      allOf:
        - $ref: "#/components/schemas/Listing"
        - $ref: "#/components/schemas/Oauths"
    Oauth:
      example:
        created_date: 09-05-23 12:30
        application: slack
      properties:
        created_date:
          type: string
        application:
          type: string
        name:
          type: string
      required:
        - code
        - application
    Oauths:
      example:
        items:
          - id: id
          - id: id
      properties:
        items:
          items:
            $ref: "#/components/schemas/Oauth"
          type: array
      required:
        - items
      type: object
    SlackCommandOutput:
      example:
        response_type: ephemeral
        text: Weather is 90 degrees
      properties:
        response_type:
          type: string
        text:
          type: string
      required:
        - response_type
        - text
      type: object
    ConnectionRequestSpec:
      properties:
        body:
          description: >
            A value conforming to the official JSON Schema core/validation
            dialect 2020-12 meta-schema.
      type: object
    ConnectionAuth:
      discriminator:
        mapping:
          Oauth2: "#/components/schemas/Oauth2Flow"
        propertyName: type
      oneOf:
        - $ref: "#/components/schemas/Oauth2Flow"
        - properties:
            type:
              $ref: "#/components/schemas/ConnectionAuthType"
          required:
            - type
    ConnectionAuthType:
      enum:
        - Oauth2
      type: string
      x-speakeasy-name-override: connection_auth_type_enum
    ConnectionSpec:
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
        auth:
          $ref: "#/components/schemas/ConnectionAuth"
        request:
          $ref: "#/components/schemas/ConnectionRequestSpec"
        code:
          type: string
      required:
        - auth
        - icon
        - id
        - name
        - request
      type: object
    ConnectionSpecs:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ConnectionSpec"
          type: array
      required:
        - items
      type: object
    ConnectionSpecListing:
      allOf:
        - $ref: "#/components/schemas/Listing"
        - $ref: "#/components/schemas/ConnectionSpecs"
    Connection:
      example:
        id: id
        name: GitHub-Abbey
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          format: date-time
          type: string
        type:
          $ref: "#/components/schemas/ConnectionType"
      required:
        - created_at
        - id
        - type
      type: object
    ConnectionListing:
      allOf:
        - $ref: "#/components/schemas/Listing"
        - $ref: "#/components/schemas/Connections"
    ConnectionType:
      enum:
        - Github
        - Pagerduty
        - GithubEnterprise
      type: string
    Connections:
      example:
        items:
          - id: id
          - id: id
      properties:
        items:
          items:
            $ref: "#/components/schemas/Connection"
          type: array
      required:
        - items
      type: object
    ConnectionParams:
      discriminator:
        mapping:
          Github: "#/components/schemas/ConnectionParamsGithubVariant"
          Pagerduty: "#/components/schemas/PagerdutyConnectionValue"
          GithubEnterprise: "#/components/schemas/GithubEnterpriseConnectionValue"
        propertyName: type
      example:
        type: GitHub
        name: Abbey
      oneOf:
        - $ref: "#/components/schemas/ConnectionParamsGithubVariant"
        - $ref: "#/components/schemas/PagerdutyConnectionValue"
        - $ref: "#/components/schemas/GithubEnterpriseConnectionValue"
        - properties:
            type:
              $ref: "#/components/schemas/ConnectionType"
          required:
            - type
    ConnectionParamsBase:
      properties:
        name:
          type: string
      type: object
    PagerdutyConnectionValue:
      allOf:
        - $ref: "#/components/schemas/ConnectionParamsBase"
        - properties:
            value:
              $ref: "#/components/schemas/PagerdutyConnection"
          required:
            - value
          type: object
    PagerdutyConnection:
      properties:
        client_info:
          type: string
        id_token:
          type: string
        token_type:
          type: string
        refresh_token:
          type: string
        scope:
          type: string
      required:
        - client_info
        - id_token
        - refresh_token
        - scope
      type: object
    ConnectionParamsGithubVariant:
      allOf:
        - $ref: "#/components/schemas/ConnectionParamsBase"
        - properties:
            value:
              $ref: "#/components/schemas/ConnectionParamsGithub"
          required:
            - value
          type: object
    ConnectionParamsGithub:
      properties:
        installation_id:
          type: string
        code:
          type: string
      required:
        - installation_id
        - code
      type: object
    GithubEnterpriseConnectionValue:
      allOf:
        - $ref: "#/components/schemas/ConnectionParamsBase"
      properties:
        value:
          $ref: "#/components/schemas/GithubEnterpriseConnection"
      required:
        - value
      type: object
    GithubEnterpriseConnection:
      properties:
        installation_id:
          type: string
        hostname:
          type: string
      required:
        - installation_id
        - hostname
      type: object
    ConnectionUpdateParams:
      example:
        name: name
      properties:
        name:
          description: The name of the connection
          type: string
      type: object
    Identities:
      items:
        $ref: "#/components/schemas/Identity"
      type: array
    Identity:
      allOf:
        - $ref: "#/components/schemas/IdentityParams"
        - example:
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
          properties:
            id:
              type: string
            created_at:
              format: date-time
              type: string
            updated_at:
              format: date-time
              type: string
          required:
            - created_at
            - updated_at
            - id
          type: object
          x-speakeasy-entity: Identity
    IdentityParams:
      example:
        abbey_account: alice@example.com
        source: okta
        metadata: '{"user_id":"UserId"}'
      properties:
        abbey_account:
          type: string
        source:
          type: string
        metadata:
          description: Json encoded string. See documentation for details.
          type: string
      required:
        - abbey_account
        - source
        - metadata
      type: object
      x-speakeasy-entity: Identity
    KeyValuePair:
      properties:
        key:
          type: string
        value:
          description: >
            A meta-schema conforming to the official JSON Schema core/validation
            dialect 2020-12 meta-schema.
      required:
        - key
        - val
      type: object
    Listing:
      properties:
        next:
          type: string
        prev:
          type: string
      type: object
    Policy:
      properties:
        bundle:
          type: string
        query:
          type: string
      type: object
    Request:
      example:
        id: req_1234
        grant_id: grant_1234
        grant_kit_id: gk_1234
        grant_kit_version_id: gkv_1234
        grant_kit_name: my_grant_kit
        user_id: user_1234
        reason: Need temporary access.
        status: approved
        reviews: null
        created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        pull_request: https://github.com/organizations/repo/pull/1
      properties:
        id:
          type: string
        grant_kit_id:
          type: string
        grant_kit_version_id:
          type: string
        grant_kit_name:
          type: string
        reason:
          type: string
        user_id:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        reviews:
          items:
            $ref: "#/components/schemas/Review"
          type: array
        grant_id:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        pull_request:
          type: string
      required:
        - id
        - grant_id
        - grant_kit_id
        - grant_kit_version_id
        - reason
        - status
        - user_id
        - created_at
        - updated_at
        - pull_request
      type: object
    RequestParams:
      example:
        grant_kit_id: gk_1234
        reason: reason
      properties:
        grant_kit_id:
          type: string
        reason:
          type: string
        user_input:
          $ref: "#/components/schemas/UserInput"
          nullable: true
      required:
        - grant_kit_id
        - reason
      type: object
    UserInput:
      nullable: true
      properties:
        expire_in:
          nullable: true
          type: string
          pattern: ^[-+]?(\d+)(ns|us|µs|ms|[smh])$
        expire_at:
          nullable: true
          type: string
          format: date-time
      type: object
    RequestCancelParams:
      example:
        reason: reason
      properties:
        reason:
          description: The reason for canceling the request
          type: string
      type: object
    RequestStatus:
      enum:
        - Pending
        - Denied
        - Approved
        - Canceled
      type: string
    Requests:
      items:
        $ref: "#/components/schemas/Request"
      maxItems: 100
      type: array
    GrantKit:
      example:
        id: gk_1234
        name: null_grant
        current_version_id: gkv_1234
        description: description
        workflow:
          steps:
            - reviewers:
                one_of:
                  - alice@example.com
              skip_if: null
        policies:
          - bundle: github://example-org/example-repo/policies
        output:
          location: github://organization/repo/access.tf
          append: |
            resource "null_resource" "null_grant_firmly_relieved_collie" {
            }
        grants: []
        requests: []
        created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        name:
          type: string
        current_version_id:
          type: string
        description:
          type: string
        workflow:
          $ref: "#/components/schemas/GrantWorkflow"
        policies:
          $ref: "#/components/schemas/Policies"
        output:
          $ref: "#/components/schemas/Output"
        grants:
          items:
            $ref: "#/components/schemas/Grant"
          maxItems: 100
          type: array
        requests:
          items:
            $ref: "#/components/schemas/Request"
          maxItems: 100
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - id
        - name
        - current_version_id
        - description
        - output
        - grants
        - requests
        - created_at
        - updated_at
      type: object
      x-speakeasy-entity: GrantKit
    GrantKits:
      items:
        $ref: "#/components/schemas/GrantKit"
      maxItems: 100
      type: array
    GrantKitVersion:
      example:
        id: gkv_1234
        version: 1
        grant_kit_id: gk_1234
        grant_kit_name: null_grant
        description: description
        workflow:
          steps:
            - reviewers:
                one_of:
                  - alice@example.com
              skip_if: null
        policies:
          - bundle: github://example-org/example-repo/policies
        output:
          location: github://organization/repo/access.tf
          append: |
            resource "null_resource" "null_grant_firmly_relieved_collie" {
            }
        created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        version:
          type: integer
        grant_kit_id:
          type: string
        grant_kit_name:
          type: string
        description:
          type: string
        workflow:
          $ref: "#/components/schemas/GrantWorkflow"
        policies:
          $ref: "#/components/schemas/Policies"
        output:
          $ref: "#/components/schemas/Output"
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - created_at
        - description
        - grant_kit_id
        - grant_kit_name
        - id
        - output
        - policies
        - updated_at
        - version
        - workflow
      type: object
    GrantKitVersions:
      items:
        $ref: "#/components/schemas/GrantKitVersion"
      maxItems: 100
      type: array
    GrantKitCreateParams:
      example:
        name: my_grant_kit
        description: My description
        workflow:
          steps:
            - reviewers:
                one_of:
                  - alice@example.com
              skip_if: null
        policies:
          - bundle: github://example-org/example-repo/policies
        output:
          location: github://organization/repo/access.tf
          append: |
            resource "null_resource" "null_grant_firmly_relieved_collie" {
            }
      properties:
        name:
          type: string
        description:
          type: string
        workflow:
          $ref: "#/components/schemas/GrantWorkflow"
        policies:
          $ref: "#/components/schemas/Policies"
        output:
          $ref: "#/components/schemas/Output"
      required:
        - description
        - name
        - output
      type: object
      x-speakeasy-entity: GrantKit
    GrantKitUpdateParams:
      example:
        name: my_grant_kit
        description: description
        workflow:
          steps:
            - reviewers:
                - alice@example.com
              skip_if: null
        policies:
          - bundle: github://example-org/example-repo/policies
        output:
          location: github://organization/repo/access.tf
          append: |
            resource "null_resource" "null_grant_firmly_relieved_collie" {
            }
      properties:
        name:
          description: The name of the connection
          type: string
        description:
          type: string
        workflow:
          $ref: "#/components/schemas/GrantWorkflow"
        output:
          $ref: "#/components/schemas/Output"
        policies:
          $ref: "#/components/schemas/Policies"
      required:
        - description
        - name
        - output
      type: object
      x-speakeasy-entity: GrantKit
    Error:
      properties:
        type:
          type: string
        code:
          type: string
        message:
          type: string
        param:
          type: string
        doc_url:
          type: string
      required:
        - code
        - message
        - type
      type: object
    Review:
      example:
        id: rev_1234
        user_id: user_1234
        user_email: alice@example.com
        request_id: req_1234
        status: Approved
        request_reason: please
        reason: reason
        grant_kit_version_id: gkv_1234
        grant_kit_name: my_grant_kit
        grant_id: grant_1234
        created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        user_id:
          type: string
        user_email:
          type: string
        request_id:
          type: string
        status:
          $ref: "#/components/schemas/ReviewStatus"
        request_reason:
          type: string
        reason:
          type: string
        grant_kit_version_id:
          type: string
        grant_kit_name:
          type: string
        grant_id:
          type: string
        grant:
          $ref: "#/components/schemas/Grant"
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        pull_request:
          type: string
      required:
        - created_at
        - grant_id
        - grant_kit_version_id
        - grant_kit_name
        - id
        - reason
        - request_reason
        - request_id
        - status
        - updated_at
        - user_id
        - pull_request
      type: object
    Reviews:
      items:
        $ref: "#/components/schemas/Review"
      type: array
    ReviewUpdateParams:
      example:
        reason: approved for temporary access
      properties:
        reason:
          type: string
      type: object
      required:
        - reason
    ReviewStatus:
      enum:
        - Pending
        - Denied
        - Approved
        - Canceled
      type: string
    Grant:
      nullable: true
      example:
        id: grant_1234
        grant_kit_id: gk_1234
        grant_kit_version_id: gkv_1234
        user_id: user_1234
        request_id: req_1234
        organization_id: org_1234
        deleted: false
        created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        grant_kit_id:
          type: string
        grant_kit_version_id:
          type: string
        user_id:
          type: string
        request_id:
          type: string
        organization_id:
          type: string
        deleted:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - created_at
        - deleted
        - grant_kit_id
        - grant_kit_version_id
        - id
        - organization_id
        - request_id
        - updated_at
        - user_id
      type: object
    Grants:
      items:
        $ref: "#/components/schemas/Grant"
      type: array
    ApiKeysCreateParams:
      example:
        name: name
      properties:
        name:
          type: string
        expired_at:
          format: date-time
          type: string
      required:
        - name
      type: object
    ApiKeys:
      example:
        items:
          - api_key: 1234567890
            name: name
          - api_key: 1234567890
            name: name
      properties:
        items:
          items:
            $ref: "#/components/schemas/ApiKey"
          type: array
      required:
        - items
      type: object
    ApiKey:
      example:
        api_key: 1234567890
        name: name
      properties:
        api_key:
          type: string
        name:
          type: string
        expired:
          type: boolean
        expired_at:
          format: date-time
          type: string
          nullable: true
        last_used:
          format: date-time
          type: string
          nullable: true
      required:
        - api_key
        - expired
        - name
      type: object
    Output:
      example:
        location: location
      properties:
        location:
          type: string
        append:
          type: string
        overwrite:
          type: string
      required:
        - location
      type: object
    Policies:
      x-speakeasy-param-computed: false
      items:
        $ref: "#/components/schemas/Policy"
      maxItems: 100
      type: array
    UserQuery:
      discriminator:
        mapping:
          AuthId: "#/components/schemas/UserQueryAuthIdVariant"
        propertyName: type
      oneOf:
        - $ref: "#/components/schemas/UserQueryAuthIdVariant"
        - properties:
            type:
              enum:
                - AuthId
              type: string
          required:
            - type
          type: object
    UserQueryAuthIdVariant:
      properties:
        type:
          enum:
            - AuthId
          type: string
        value:
          type: string
      required:
        - type
        - value
      type: object
    LinkedIdentities:
      additionalProperties:
        items: {}
        type: array
      example:
        abbey:
          - null
          - null
      properties:
        abbey:
          items:
            $ref: "#/components/schemas/UserQuery"
          type: array
      type: object
    HttpMethod:
      enum:
        - GET
        - POST
      type: string
    GrantWorkflow:
      x-speakeasy-param-computed: false
      nullable: true
      properties:
        steps:
          items:
            $ref: "#/components/schemas/Step"
          type: array
      type: object
    Step:
      properties:
        reviewers:
          $ref: "#/components/schemas/Reviewers"
        skip_if:
          items:
            $ref: "#/components/schemas/Policy"
          type: array
      type: object
    Reviewers:
      nullable: true
      properties:
        one_of:
          nullable: true
          items:
            type: string
          type: array
        all_of:
          nullable: true
          items:
            type: string
          type: array
      type: object
    SamlConnectionParams:
      properties:
        name:
          type: string
        domain:
          type: string
        idp_entity_id:
          type: string
        idp_sso_url:
          type: string
        idp_certificate:
          type: string
      required:
        - name
        - domain
      type: object
    SamlConnectionUpdateParams:
      properties:
        name:
          type: string
        domain:
          type: string
        idp_entity_id:
          type: string
        idp_sso_url:
          type: string
        idp_certificate:
          type: string
        active:
          type: boolean
      type: object
    SamlConnection:
      required:
        - id
        - name
        - provider
        - active
        - sp_entity_id
        - acs_url
      properties:
        id:
          type: string
        name:
          type: string
        provider:
          type: string
        active:
          type: boolean
        sp_entity_id:
          type: string
        acs_url:
          type: string
        idp_entity_id:
          type: string
        idp_sso_url:
          type: string
        idp_certificate:
          type: string
      type: object
    SamlConnections:
      properties:
        items:
          items:
            $ref: "#/components/schemas/SamlConnection"
          type: array
      required:
        - items
    Demo:
      properties:
        id:
          type: integer
        user_id:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
      x-speakeasy-entity: Demo
    DemoParams:
      properties:
        permission:
          type: string
          enum:
            - read_write
          default: read_write
        email:
          type: string
          format: email
      type: object
      required:
        - permission
        - email
      x-speakeasy-entity: Demo
    WorkOSUserEvent:
      properties:
        event:
          type: string
        id:
          type: string
        data:
          $ref: "#/components/schemas/WorkOSUserData"
        created_at:
          type: string
          format: date-time
    WorkOSUserData:
      properties:
        id:
          type: string
        object:
          type: string
        directory_id:
          type: string
        organization_id:
          type: string
        idp_id:
          type: string
        emails:
          type: array
          items:
            type: object
            properties:
              primary:
                type: boolean
              type:
                type: string
              value:
                type: string
        first_name:
          type: string
        last_name:
          type: string
        job_title:
          type: string
        username:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        custom_attributes:
          type: object
        raw_attributes:
          type: object
        previous_attributes:
          type: object
    WorkOSGroupEvent:
      properties:
        event:
          type: string
        id:
          type: string
        data:
          $ref: "#/components/schemas/WorkOSGroupData"
        created_at:
          type: string
          format: date-time
    WorkOSGroup:
      properties:
        object:
          type: string
        id:
          type: string
        directory_id:
          type: string
        organization_id:
          type: string
        idp_id:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        raw_attributes:
          type: object
        previous_attributes:
          type: object
    WorkOSGroupData:
      allOf:
        - $ref: "#/components/schemas/WorkOSGroup"
      properties:
        group:
          $ref: "#/components/schemas/WorkOSGroup"
        user:
          $ref: "#/components/schemas/WorkOSUserData"
    WorkOSDirectoryEvent:
      properties:
        event:
          type: string
        id:
          type: string
        data:
          $ref: "#/components/schemas/WorkOSDirectoryData"
        created_at:
          type: string
          format: date-time
    WorkOSDirectoryData:
      properties:
        object:
          type: string
        external_key:
          type: string
        name:
          type: string
        organization_id:
          type: string
        id:
          type: string
        state:
          type: string
        type:
          type: string
        domains:
          type: array
          items:
            type: object
            properties:
              object:
                type: string
              id:
                type: string
              domain:
                type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    DirectorySyncParams:
      properties:
        name:
          type: string
        domain:
          type: string
      required:
        - name
        - domain
    DirectorySync:
      properties:
        id:
          type: string
        name:
          type: string
        directory_id:
          type: string
        type:
          type: string
        domains:
          items:
            type: string
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - id
        - directory_id
        - created_at
        - updated_at
    DirectorySyncAdminPortal:
      properties:
        link:
          type: string
        expires_at:
          format: date-time
          type: string
    GithubEnterpriseAppParams:
      properties:
        hostname:
          type: string
        org:
          type: string
        id:
          type: string
        client_id:
          type: string
        pem:
          type: string
    GithubEnterpriseApp:
      properties:
        hostname:
          type: string
        org:
          type: string
        id:
          type: string
        slug:
          type: string
        appID:
          type: string
    GithubEnterpriseApps:
      items:
        $ref: "#/components/schemas/GithubEnterpriseApp"
      type: array
    OrganizationGrantKitCount:
      properties:
        organization_name:
          type: string
        grant_kit_count:
          type: integer
      required:
        - organization_name
        - grant_kit_count
    OrganizationGrantKitCounts:
      properties:
        items:
          items:
            $ref: "#/components/schemas/OrganizationGrantKitCount"
          type: array
      required:
        - items
    ResourceRequestCount:
      properties:
        resource_name:
          type: string
        request_count:
          type: integer
      required:
        - resource_name
        - request_count
    ResourceRequestCounts:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ResourceRequestCount"
          type: array
      required:
        - items
    UserApprovalCount:
      properties:
        primary_email_address:
          type: string
        request_count:
          type: integer
      required:
        - primary_email_address
        - request_count
    UserApprovalAnalytics:
      properties:
        approvals:
          items:
            $ref: "#/components/schemas/UserApprovalCount"
        denials:
          items:
            $ref: "#/components/schemas/UserApprovalCount"
      required:
        - approvals
        - denials
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      description: >
        This API uses JWT Bearer authentication. Provide a valid JWT token in
        the

        Authorization header using the Bearer scheme.
      scheme: bearer
      type: http
